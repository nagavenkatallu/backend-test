name: Deploy Backend to GCE (Manual SSH)

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Permissions are needed for the Google Auth action
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      # You still need to authenticate to GCP to use the gcloud CLI
      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # This single step handles the entire deployment using shell commands
      - name: Deploy to GCE via SSH
        run: |
          echo "--- 1. Setting up the SSH key ---"
          # Write the private key from secrets to a temporary file
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ssh_key
          # Set the required strict file permissions for the key
          chmod 600 ssh_key

          echo "--- 2. Fetching the VM's IP address ---"
          IP_ADDRESS=$(gcloud compute instances describe ${{ secrets.GCE_INSTANCE_NAME }} \
            --zone=${{ secrets.GCE_INSTANCE_ZONE }} \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo "VM IP address is $IP_ADDRESS"

          echo "--- 3. Copying the application JAR to the VM ---"
          scp -o StrictHostKeyChecking=no -i ./ssh_key \
            ./target/*.jar \
            ci_user@$IP_ADDRESS:/home/ci_user/app.jar

          echo "--- 4. Restarting the application on the VM ---"
          ssh -o StrictHostKeyChecking=no -i ./ssh_key \
            ci_user@$IP_ADDRESS \
            "sudo systemctl stop backend-test && sudo journalctl --rotate && sudo journalctl --vacuum-time=1s -u backend-test && sudo systemctl restart backend-test && sudo systemctl is-active --quiet backend-test"
          
          echo "--- Deployment complete ---"